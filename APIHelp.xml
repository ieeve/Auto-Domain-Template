<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Web.Api</name>
    </assembly>
    <members>
        <member name="T:Web.Api.Controllers.Admin.EntityController">
            <summary>
            根据数据表生成实体类，dbFirst
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Admin.EntityController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            构造函数
            </summary>
            <param name="hostingEnvironment"></param>
        </member>
        <member name="M:Web.Api.Controllers.Admin.EntityController.CreateEntity(System.String)">
            <summary>
            生成数据库实体类
            </summary>
            <param name="entityName">数据库表名</param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.EntityController.CreateMesEntity(System.String)">
            <summary>
            生成 MES 数据库实体类
            </summary>
            <param name="entityName">数据库表名</param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.InstallController.SysInstalled">
            <summary>
            通过install.lock文件存在判断系统是否已经安装
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.InstallController.FinishInstall">
            <summary>
            完成安装
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.InstallController.InitSysData">
            <summary>
            初始化系统表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.InstallController.InitFirstData">
            <summary>
            建立系统必须的数据
            </summary>
            
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.GetMenuTreeList">
            <summary>
            取得指定对象列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.GetMenuById(System.Int32)">
            <summary>
            取得单条记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.GetMenuList">
            <summary>
            取得所有
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.DelById(System.Int32)">
            <summary>
            删除树
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.getDelIdList(System.Collections.Generic.List{Web.Domain.DbEntity.base_menu},System.Int32)">
            <summary>
            取得下属子菜单列表
            </summary>
            <param name="data"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.AddItem(Web.Domain.DbEntity.base_menu)">
            <summary>
            添加新的菜单信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.AddItemArr(System.Collections.Generic.List{Web.Domain.DbEntity.base_object})">
            <summary>
            批量添加菜单
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.EditItem(Web.Domain.DbEntity.base_menu)">
            <summary>
            修改信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.EditItemArr(System.Collections.Generic.List{Web.Domain.DbEntity.base_menu})">
            <summary>
            批量修改菜单子父结构
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuController.AsyncItemArr">
            <summary>
            同步对象数据和视图数据进入菜单项
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuRoleController.GetRoleMenuList(System.Int32)">
            <summary>
            取得指定角色所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuRoleController.GetRoleMenuIdArr(System.Int32)">
            <summary>
            取得指定角色所有菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.MenuRoleController.SaveByMenuIdArr(Web.Domain.Dto.menuRoleSaveDto)">
            <summary>
            存盘角色菜单
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Admin.TokenController">
            <summary>
            API相互之间的令牌
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Admin.TokenController.SysToken(Web.Domain.Dto.LoginRequest)">
            <summary>
             获取Token，系统调用API用，将来需统一认证
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.UserOrgController.getDataById(System.Int32)">
            <summary>
            根据id取单条记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.UserOrgController.deleteById(System.Int32)">
            <summary>
            根据id取单条记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.UserOrgController.insertData(Web.Domain.DbEntity.base_sys_org)">
            <summary>
            根据实体插入新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.UserOrgController.updateData(Web.Domain.DbEntity.base_sys_org)">
            <summary>
            根据实体更新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.UserOrgController.getOrgTableTree">
            <summary>
            取得组织架构树状表结构（elementUI所需树状结构）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.UserOrgController.getOrgSelectTree">
            <summary>
            取得下拉列表树状结构
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.ObjViewController.GetPage(Web.Domain.Dto.PageRequest)">
            <summary>
            数据分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.ObjViewController.insertData(Web.Domain.DbEntity.base_view)">
            <summary>
            根据实体插入新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.ObjViewController.updateData(Web.Domain.DbEntity.base_view)">
            <summary>
            根据实体更新新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.ObjViewController.DelData(System.Int32)">
            <summary>
            加入回收站
            </summary>
            <param name="objectName"></param>
            <param name="id"></param>
            <param name="notes"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.ObjViewController.getObjList">
            <summary>
            取得对象列表，尝试按业务划分
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Admin.ObjViewController.getObjPropList(System.Int32)">
            <summary>
            取得对象的属性，包含对象的关联属性。
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Web.Api.Controllers.Admin.ObjViewController.postEditViewPropArr(System.Collections.Generic.List{Web.Domain.DbEntity.base_view_property})" -->
        <member name="M:Web.Api.Controllers.BaseController.#ctor(Microsoft.Extensions.Options.IOptions{Web.Domain.Dto.ConfigModel.AppConfigModel})">
            <summary>
            取得配置文件
            </summary>
            <param name="setting"></param>
        </member>
        <member name="M:Web.Api.Controllers.Charts.DetailController.GetInfo(System.String)">
            <summary>
            取得外协厂注册信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Charts.DetailController.ChartRight1(System.String)">
            <summary>
            charts/Detail 里面右侧水晶球图数据
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Cooperation.CooperationabilityController">
            <summary>
            外协预提
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityController.GetPage(Web.Domain.Dto.PageRequest)">
            <summary>
            获取外协审核数据列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityController.saveAudit(System.Object)">
            <summary>
            保存审核
            </summary>
            <param name="obj"> 一个类， 包含 cooperationability 中的ID , 对话框中选择的“行”</param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityController.GetSelectListByID(System.String)">
            <summary>
            对话框：取得下拉框的值
            </summary>
            <param name="label"> 标识 </param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityController.insertCooperabilityOtherDept">
            <summary>
            将 导入到 ZZCMAINPLAN 中的外分厂外协数据，放入 COOPERATIONABIILTY .
            自动判断哪些信息需要导入 COOPERATIONABILITY , 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityController.GetCBListByID(System.String)">
            <summary>
            对话框：取得已审核的工序列表,参数名必须和API一致
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityController.updateMesZZCMAINPLAN(System.String,System.String)">
            <summary>
            私有函数，  更改 ZZCMAINPLAN 表
            </summary>
            <param name="mainid"></param>
            <param name="subType"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityController.updateMesCooperationAbility(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            私有函数， 更改 CooperationAbility 表中的字段
            </summary>
            <param name="mainid"></param>
            <param name="employid"></param>
            <param name="quantity"></param>
            <param name="route"></param>
            <param name="time"></param>
            <param name="costtype"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Cooperation.CooperationabilityOrderController">
            <summary>
            有关 外协工单的类
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.GetSupplier">
            <summary>
            得到 所有外协厂家
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.getContractState">
            <summary>
            得到 外协合同状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.GetListByID(System.String)">
            <summary>
            由 coopertionabilityOrder 中的 ID , 得到 外协工序明细  cooperationabilitylist  中的数据
            这个是用于 外协类型 = PLAN 
            </summary>
            <param name="id">coopertionabilityOrder 中的ID </param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.GetPlanOrderType">
            <summary>
            得到 外协类型(PLAN , ORDER ）的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.SaveAudit(System.Object)">
            <summary>
            审核对话框中的 保存
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.SaveAuditDateArr(System.Object)">
            <summary>
            批量修改 外协工单的合同状态
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.getRouteFromWSRByID(System.String)">
            <summary>
            由 COOPERTIONABILITYORDER 中的 ID , 得到 worksegmentrequirement 中的 工序信息
            </summary>
            <param name="id"> cooperationabilityOrder 中的 ID </param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.insertMiddleInfo(System.Object)">
            <summary>
            写入 工单中途返厂 的信息
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.getReturnType">
            <summary>
            返回中途返厂类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Cooperation.CooperationabilityOrderController.removeMiddleReturnByID(System.String)">
            <summary>
            删除 中途返厂 信息
            </summary>
            <param name="id">coopertionmiddereturn 中的id </param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumController.AddObject(System.Object)">
            <summary>
            添加对象
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumController.EditObject(Web.Domain.DbEntity.base_enum)">
            <summary>
            修改对象信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumController.getPage(Web.Domain.Dto.PageRequest)">
            <summary>
            所有分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumController.getDel(System.String)">
            <summary>
            删除数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumController.GetEnumInfo(System.String)">
            <summary>
            取得单条记录
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumController.GetAllEnum">
            <summary>
            取得所有枚举，注意性能
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumDataController.getPage(Web.Domain.Dto.PageRequest)">
            <summary>
            所有分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumDataController.getDel(System.Int64)">
            <summary>
            删除数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumDataController.AddObject(System.Object)">
            <summary>
            添加对象
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumDataController.EditObject(Web.Domain.DbEntity.base_enum_data)">
            <summary>
            修改对象信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumDataController.EditObjectArr(System.Collections.Generic.List{Web.Domain.DbEntity.base_enum_data})">
            <summary>
            批量编辑
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumDataController.GetInfo(System.Int32)">
            <summary>
            取得单条记录
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Enum.EnumDataController.GetEnumDataList(System.String)">
            <summary>
            取得列表
            </summary>
            <param name="enumname"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Function.FunController">
            <summary>
            系统函数控制器
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Function.FunController.col2row">
            <summary>
            行转成转成单行显示,废弃
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Function.FunController.col2row_new(System.Int32)">
            <summary>
            行转成转成单行显示 aps_knowledge->aps_productionline
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.CommonController.PostFunExc(Web.Domain.Dto.ObjectFunPostParam)">
            <summary>
            执行对象函数的统一接口，然后根据收到的id执行不同的任务
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.CommonController.UpdateFields(Web.Domain.Dto.UpdateFieldParam)">
            <summary>
            更改 MES中类的字段的值
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.CommonController.UpdateStatus(System.Collections.Generic.List{Web.Domain.Dto.SendSmsModel})">
            <summary>
            只能用于objectid=248 或者 ViewDataList=6 mak_out_runningrecords对象表信息
            </summary>
            <param name="success">当前执行成功的行</param>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.CommonController.SendSmsMsg(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            只能用于objectid=248 或者 ViewDataList=6 mak_out_runningrecords对象表信息
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.scan_stockController.GetOneDayData">
            <summary>
            取得当天增加的所有数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.scan_stockController.GetInputQuerySearch(System.String)">
            <summary>
            库房位置输入建议
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.scan_stockController.submitScanAsync(System.String)">
            <summary>
            扫码提交事件
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.scan_stockController.DelByIdAsync(System.Int32)">
            <summary>
            删除数据
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.scan_stockController.SaveData(System.Object)">
            <summary>
            手工录入信息提交
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.scan_stockController.queryWorkNoSearch(System.String)">
            <summary>
            取得自动完成工号下拉列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectFunction.scan_stockController.queryItemNoSearch(System.String)">
            <summary>
            取得工号自动完成图号下拉列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectView.ObjectViewDataController.ViewDataPage(Web.Domain.Dto.PageRequest)">
            <summary>
            所有对象分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ObjectView.ObjectViewDataController.ExportExcelData(Web.Domain.Dto.PageRequest)">
            <summary>
            后端导出excle数据，视图模板不能用于导入编辑
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectAopController.GetAopList(System.Int32)">
            <summary>
            取得指定对象所有切片列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectAopController.GetAopListByObjName(System.String)">
            <summary>
            取得指定对象所有切片列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectAopController.GetAopById(System.Int32)">
            <summary>
            取得切片
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectAopController.GetAopByObjectId(System.Int32)">
            <summary>
            取得object所有切片
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectAopController.DelAopById(System.Int32)">
            <summary>
            删除切片
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectAopController.AddAopItem(System.Object)">
            <summary>
            添加新的切片信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectAopController.EditAopItem(Web.Domain.DbEntity.base_object_aop)">
            <summary>
            修改切片信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Object.ObjectBaseController">
            <summary>
            对象列表控制器
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.GetObjectPage(Web.Domain.Dto.PageRequest)">
            <summary>
            所有对象分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.GetObjectList">
            <summary>
            所有对象分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.DelObject(System.Int32,System.String)">
            <summary>
            标识删除对象
            </summary>
            <param name="id"></param>
            <param name="notes">删除说明</param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.DropObject(System.Int32)">
            <summary>
            清除对象
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.AddObject(System.Object)">
            <summary>
            添加对象
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.EditObject(Web.Domain.DbEntity.base_object)">
            <summary>
            修改对象信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.RenameObject(System.String,System.String)">
            <summary>
            重命名对象的名称，同时需要修改所有相关属性,TODO, 待完成
            </summary>
            <param name="oldTableName"></param>
            <param name="newTableName"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.GetObjectInfo(System.Int32)">
            <summary>
            取得对象的信息
            </summary>
            <param name="id">对象名</param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectBaseController.DelObjectInfo(System.Int32)">
            <summary>
            删除对象
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Object.ObjectDataController">
            <summary>
            对象数据控制器
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.GetPage(Web.Domain.Dto.PageRequest)">
            <summary>
            所有对象分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.insertData(System.Collections.Generic.List{Web.Domain.Dto.ColumnHeaderModel})">
            <summary>
            根据实体名插入新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.ObjectDataUpdate(System.Collections.Generic.List{Web.Domain.Dto.ColumnHeaderModel})">
            <summary>
            根据实体名更新新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
            
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.ObjectDataBatchUpdate(System.Object)">
            <summary>
            批量修改数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.ObjectDataBatchSetNull(System.Object)">
            <summary>
            批量设置列为空值。
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.DelData2Recycle(System.Int64,Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            加入回收站
            </summary>
            <param name="objectid"></param>
            <param name="id"></param>
            <param name="notes"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.DelDataByid(System.Int32,System.String,System.String,System.String)">
            <summary>
            根据id删除对象的数据
            </summary>
            <param name="objectid"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.DelBatch(System.Int32,System.String)">
            <summary>
            批量删除,废弃，使用
            </summary>
            <param name="objid"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.getDataById(System.Int32,System.String,System.String)">
            <summary>
            取得单条对象的数据
            </summary>
            <param name="objectid"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns>返回的数据包含在columns里的val</returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.getDataStruct(System.Int32)">
            <summary>
            取得对象结构，添加数据时候需要
            </summary>
            <param name="objectid"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.getRichDataById(System.Int32,System.Int32,System.String)">
            <summary>
            取得单条对象的数据 
            </summary>
            <param name="objectid"></param>
            <param name="keyName"></param>
            <param name="keyValue"></param>
            <returns>返回的数据包含在columns里的val</returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.getSelectObjectData(System.String,System.String,System.Int32,System.String)">
            <summary>
            取得关联对象的下拉列表数据内容
            </summary>
            <param name="relationkey"></param>
            <param name="relationcolumn"></param>
            <param name="querystring"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.getDataDetail(System.Int64,System.String,System.String,System.Int32)">
            <summary>
            取得关联对象值的详细信息
            </summary>
            <param name="relationkey"></param>
            <param name="relationcolumn"></param>
            <param name="querystring"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.importExcelLocalSave(System.Object)">
             <summary>
            根据表名称进行导入
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.importExcelDataSave(System.Object)">
            <summary>
             根据对象id称进行导入
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.ExportExcelTemplate(System.Int32)">
            <summary>
            下载对象的导入数据模板
            </summary>
            <param name="objid"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.ImportExcelTemplateFile(Microsoft.AspNetCore.Http.IFormFile,System.Int32)">
            <summary>
            上传excel文件
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDataController.ExportExcelData(Web.Domain.Dto.PageRequest)">
            <summary>
            后端导出excle数据，可用于编辑后重新上传
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Object.ObjectDbController">
            <summary>
            底层数据库、数据表、数据列的属性获取
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.GetDatabaseList">
            <summary>
            所有数据库列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.getDataPage(Web.Domain.Dto.PageRequest)">
            <summary>
            分页数据
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.insertData(Web.Domain.DbEntity.base_db_list)">
            <summary>
            根据实体插入新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.updateData(Web.Domain.DbEntity.base_db_list)">
            <summary>
            根据实体更新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.getDataById(System.Int32)">
            <summary>
            根据id取单条记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.DelObjectData(System.Int32)">
            <summary>
            删除id的数据
            </summary>
            <param name="objectName"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.GetDbAllTable(System.Int32)">
             <summary>
            根据id取得数据库的所有表
             </summary>
             <param name="id"></param>
             <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.BackupDatabase(Web.Domain.DbEntity.base_db_list)">
            <summary>
            备份数据库
            </summary>
            <param name="dbInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectDbController.GetAllBackupFileList(System.Int32)">
            <summary>
            取得已备份文件列表，读取子目录
            </summary>
            <param name="dbid"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Object.ObjectPropertyController">
            <summary>
            对象属性控制器
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.GetPropPage(Web.Domain.Dto.PageRequest)">
            <summary>
            所有对象分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.GetPropList(System.String)">
            <summary>
            所有属性列表,已排序
            </summary>
            <param name="objectName"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.GetPropListEditLevel(System.Int32)">
            <summary>
            根据用户编辑权限，取得所有属性列表,已排序，用于导入excel
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.AddProp(System.Object)">
            <summary>
            添加表属性
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.GetPropInfo(System.Int32,System.Int32)">
            <summary>
            取得对象的属性
            </summary>
            <param name="objectid"></param>
            <param name="id">属性ID</param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.AddPropArr(Web.Domain.Dto.ObjectPropArr)">
            <summary>
            批量添加对象的属性
            </summary>
            <param name="param"></param>
            <returns></returns>
            
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.EditObjectProp(Web.Domain.DbEntity.base_object_property)">
            <summary>
            修改属性
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.EditObjectPropArr(System.Collections.Generic.List{Web.Domain.DbEntity.base_object_property})">
            <summary>
            批量修改属性
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Object.ObjectPropertyController.DelObjectProp(System.Int32,System.String,System.String)">
            <summary>
            删除对象的属性
            </summary>
            <param name="objectid"></param>
            <param name="objectProp"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Open3rd.TableController.GetObjectPage(System.String)">
            <summary>
            取得库的所有数据表
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Open3rd.TableController.GetdbTableList(System.Int32,System.String)">
            <summary>
            取得表的所有列信息
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Open3rd.TableController.GetLoacalTableColInfo(System.String)">
            <summary>
            取得本地表的所有列信息
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Open3rd.TableController.ColunmNameToLower(System.String)">
            <summary>
            修改本地postgre数据库某表名中的所有字段为小写
            </summary>
            <param name="tableName">表名</param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.TestController.CheckDocIsExist(System.String)">
            <summary>
            调用第三方API，判断图纸是否存在
            </summary>
            <param name="part_no">图号</param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.Tools.SqlToolsController">
            <summary>
            sql语句工具
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.Tools.SqlToolsController.GetPage(Web.Domain.Dto.PageRequest)">
            <summary>
            数据分页列表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Tools.SqlToolsController.insertData(Web.Domain.DbEntity.base_sql_list)">
            <summary>
            根据实体插入新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Tools.SqlToolsController.updateData(Web.Domain.DbEntity.base_sql_list)">
            <summary>
            根据实体更新新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Tools.SqlToolsController.DelData(System.String,System.Int32,System.String)">
            <summary>
            加入回收站
            </summary>
            <param name="objectName"></param>
            <param name="id"></param>
            <param name="notes"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.Tools.SqlToolsController.GetSqlPage(Web.Domain.Dto.PageRequest)">
            <summary>
            通过Sql语句生成表
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.TransWork.TransworkController.getOrdernoInfo(System.String)">
            <summary>
            根据工单号， 得到 工号表内容
            </summary>
            <param name="orderno"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.TransWork.TransworkController.getDepartmentById(System.String)">
            <summary>
            由 id 得到 value 表中的 部门名称
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.TransWork.TransworkController.saveIssue(Web.Dao.Transwork.transReq)">
            <summary>
            保存 “发布”的零件信息
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.User.DashboardController">
            <summary>
            任务看板
            </summary>
        </member>
        <member name="T:Web.Api.Controllers.User.LoginController">
            <summary>
            登录控制器
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.User.LoginController.Login(Web.Domain.Dto.LoginRequest)">
            <summary>
            用户登录换取令牌
            </summary>
            <param name="loginRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.LoginController.ValidateInput(Web.Domain.Dto.LoginRequest)">
            <summary>
            服务端验证输入
            </summary>
            <param name="loginRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.User.UserController">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.getUserListPage(Web.Domain.Dto.PageRequest)">
            <summary>
            分页数据
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.getOrgTreeByid(System.Int32)">
            <summary>
            递归用户部门ID查询所有用户（废弃，树节点上有path）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.getUserByOrgPath(System.String)">
            <summary>
            取得部门所有用户
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.getUserByOrgId(System.Int32)">
            <summary>
            取得部门所有用户
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.insertData(Web.Domain.DbEntity.base_user)">
            <summary>
            根据实体插入新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.updateData(Web.Domain.DbEntity.base_user)">
            <summary>
            根据实体更新数据
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.getDataById(System.Int32)">
            <summary>
            根据id取单条记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.DropUserById(System.Int32)">
            <summary>
            删除id的数据
            </summary>
            <param name="objectName"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.GetUserMenu">
            <summary>
            取得elementUI树状结构
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.getUserDashBoardMenu">
            <summary>
            根据权限取得任务看板图标
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.GetUserRouter">
            <summary>
            根据权限返回路由列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.User.UserController.GetUserInfo">
            <summary>
            取得用户附加信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Web.Api.Controllers.ValuesController">
            <summary>
            本对象管理系统可以快速的建立一个自己的信息化平台。用户可以创建自己的系统，然后发布出去不断地升级调整适应不断变化的企业需求。
            .netCore可以自定义路由属性 [Route("api/xxx/[controller]/[action]")] //路由属性
            [Authorize] 添加Authorize标签,所有页面需token登录,也可以对某个action单独放行 [AllowAnonymous]
            </summary>
        </member>
        <member name="M:Web.Api.Controllers.ValuesController.Get">
            <summary>
            返回登录的用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ValuesController.Get(System.Int32)">
            <summary>
            参数ID测试
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Web.Api.Controllers.ValuesController.Post(System.String)">
            <summary>
            Post测试
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Web.Api.Controllers.ValuesController.Put(System.Int32,System.String)">
            <summary>
            PUT请求是向服务器端发送数据的，从而改变信息，该请求就像数据库的update操作一样
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:Web.Api.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            用来删除一个资源
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Web.Api.Middleware.ApiExtensionMiddleware">
            <summary>
            第三方库调用中间件，需注册到 startup.cs文件里
            </summary>
        </member>
        <member name="M:Web.Api.Middleware.ApiExtensionMiddleware.UseOtherApi(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            APIFactory
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:Web.Api.Middleware.ErrorHandlingMiddleware">
            <summary>
            拦截错误，返回友好的错误提示
            在startup.cs中添加app.UseErrorHandling();
            </summary>
        </member>
        <member name="M:Web.Api.Middleware.ErrorHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            错误拦截中间件
            </summary>
            <param name="next"></param>
        </member>
        <member name="T:Web.Api.Middleware.ErrorHandlingExtensions">
            <summary>
            扩展方法
            </summary>
        </member>
        <member name="M:Web.Api.Middleware.JwtAuthorizationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            
            </summary>
            <param name="next"></param>
        </member>
    </members>
</doc>
